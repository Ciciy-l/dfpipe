name: DFPipe测试

on:
  push:
    branches: [ "master", "main", "dev" ]
  pull_request:
    branches: [ "master", "main" ]

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.6.15", "3.7.17", "3.8.18", "3.9.21", "3.10.16", "3.11.11", "3.12.9"]

    steps:
    - uses: actions/checkout@v4

    - name: 设置Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}

    - name: 安装依赖
      run: |
        python -m pip install --upgrade pip
        # 安装测试相关依赖
        pip install -r requirements-test.txt
        # 安装项目依赖
        pip install -r requirements.txt
        # 安装代码风格工具
        pip install black isort
        # 安装项目
        pip install -e .

    - name: 代码风格检查
      run: |
        # 使用black检查代码风格（不会自动修复）
        black --check --diff dfpipe
        # 使用isort检查导入排序（不会自动修复）
        isort --check --diff dfpipe

    - name: 运行测试并生成覆盖率报告
      run: |
        pytest --cov=dfpipe tests/ --cov-report=xml --cov-report=term --cov-config=.coveragerc

    - name: 覆盖率检查
      run: |
        python -m coverage report --fail-under=90
